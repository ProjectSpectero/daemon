@using Spectero.daemon.Libraries.Core
@using Spectero.daemon.Libraries.Extensions

@model Spectero.daemon.Libraries.Services.OpenVPN.Elements.OpenVPNUserConfig
@inherits RazorLight.TemplatePage<Spectero.daemon.Libraries.Services.OpenVPN.Elements.OpenVPNUserConfig>
@{
    DisableEncoding = true;
    var user = Model.User;
    var listeners = Model.Listeners;
    var systemId = Model.Identity;

    var preSortListeners = new List<Tuple<string, int, string>>();

    var pkcs12Chunks = user.Cert.Chunk(64);

    foreach (var listener in listeners)
    {
        string protocolType;
        switch (listener.Protocol)
        {
            case TransportProtocol.TCP:
                protocolType = "tcp-client";
                break;
            default:
                protocolType = "udp";
                break;
        }
        preSortListeners.Add(new Tuple<string, int, string>(listener.IPAddress, listener.Port.GetValueOrDefault(), protocolType));
    }

    var convertedListeners = preSortListeners.OrderBy(listener => listener.Item3.Equals("udp") ? -1 : 1).ToList();
}
# Automatically generated OpenVPN client config file by Spectero Daemon
# Generated on @DateTime.UtcNow (UTC) by @systemId
# Note: this config file contains inline private keys
# and therefore should be kept confidential!
# Note: this configuration is user-locked to the username below
# SPECTERO_USERNAME=@user.AuthKey
# SPECTERO_INSTANCE_ID=@systemId

setenv FORWARD_COMPATIBLE 1
client
server-poll-timeout 4
nobind
@foreach (var listener in convertedListeners)
{
    @:remote @listener.Item1 @listener.Item2 @listener.Item3
}

dev tun
dev-type tun
reneg-sec 604800
sndbuf 100000
rcvbuf 100000
max-routes 2048

comp-lzo
verb 3
setenv PUSH_PEER_INFO
auth-user-pass
remote-cert-tls server

<pkcs12>
@foreach (var pkcsChunk in pkcs12Chunks)
{
    @pkcsChunk @Environment.NewLine
}
</pkcs12>

# key-direction 1
# <tls-auth>
#
#
# </tls-auth>

# Extra user-defined configuration
cipher AES-256-CBC